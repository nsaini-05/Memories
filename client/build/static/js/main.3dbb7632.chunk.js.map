{"version":3,"sources":["components/Header/Header.js","constants/actionTypes.js","api/index.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/Posts.js","components/Form/Form.js","components/Form/style.js","App.js","reducers/combineReducers.js","reducers/postsReducers.js","index.js"],"names":["Header","class","name","CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","url","updatePost","id","newPost","axios","put","deletePost","delete","likePost","patch","Post","post","setCurrentId","dispatch","useDispatch","src","selectedFile","public_url","tags","length","map","tag","title","message","onClick","_id","a","api","data","type","payload","console","log","likeCount","Posts","styled","div","posts","useSelector","state","useEffect","get","className","CircularProgress","Form","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","currentId","find","useState","creator","public_id","postData","setPostData","onSubmit","e","updatedPost","preventDefault","createPost","for","placeholder","value","onChange","target","required","maxLength","split","reader","FileReader","onload","readyState","result","readAsDataURL","files","accept","App","combineReducers","action","filter","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dbb7632.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n/*\r\n--07 WhiteSpace\r\nSPACING SYSTEM (px)\r\n2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128\r\n\r\n\r\n\r\n*/\r\n\r\n// const Wrapper = styled.section`\r\n//   height: 6.4rem;\r\n//   padding: 0 4.8rem;\r\n//   background: #172b4d;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   gap: 1rem;\r\n// `;\r\n\r\n// const Title = styled.h1`\r\n//   font-size: 3.2rem;\r\n//   color: #fff;\r\n// `;\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header class=\"header\">\r\n      <ion-icon name=\"camera-outline\" class=\"header-icon\"></ion-icon>\r\n      <span class=\"logo-text\">Memories</span>\r\n    </header>\r\n  );\r\n};\r\n","export const CREATE = \"CREATE\";\r\nexport const UPDATE = \"UPDATE\";\r\nexport const DELETE = \"DELETE\";\r\nexport const FETCH_ALL = \"FETCH_ALL\";\r\nexport const LIKE = \"LIKE\";\r\n","import axios from \"axios\";\r\nconst url = \"https://memoriespro7.herokuapp.com/posts\";\r\nexport const fetchPosts = () => axios.get(url);\r\n\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const updatePost = (id, newPost) => axios.put(`${url}/${id}`, newPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likepost`);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { deletePost, likePost } from \"../../../actions/posts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div class=\"card\">\r\n      <img\r\n        src={post.selectedFile ? post.selectedFile.public_url : \"\"}\r\n        class=\"card-img\"\r\n      />\r\n      <div class=\"card-content\">\r\n        {post.tags.length > 0 ? (\r\n          post.tags.map((tag) => (\r\n            <span class=\"tag\">&nbsp;&nbsp;{`#${tag}`} </span>\r\n          ))\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <p class=\"card-title\">{post.title}</p>\r\n        <p class=\"card-description\">{post.message}</p>\r\n        <div class=\"card-icons\">\r\n          <div class=\"like\">\r\n            <button\r\n              class=\"like-button\"\r\n              onClick={() => dispatch(likePost(post._id))}\r\n            >\r\n              <ion-icon\r\n                name=\"thumbs-up-outline\"\r\n                class=\"card-icon card-icon-like\"\r\n              ></ion-icon>\r\n            </button>\r\n            <span class=\"card-icon-text\">{post.likeCount}</span>\r\n          </div>\r\n\r\n          <div class=\"update\">\r\n            <button\r\n              class=\"update-button\"\r\n              onClick={() => {\r\n                setCurrentId(post._id);\r\n              }}\r\n            >\r\n              <ion-icon\r\n                name=\"create-outline\"\r\n                class=\"card-icon card-icon-update\"\r\n              ></ion-icon>\r\n            </button>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              class=\"delete-button\"\r\n              onClick={() => dispatch(deletePost(post._id))}\r\n            >\r\n              <ion-icon\r\n                name=\"trash-outline\"\r\n                class=\"card-icon card-icon-delete\"\r\n              ></ion-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import {\r\n  FETCH_ALL,\r\n  DELETE,\r\n  UPDATE,\r\n  LIKE,\r\n  CREATE,\r\n} from \"../constants/actionTypes\";\r\n\r\nimport * as api from \"../api\";\r\n\r\n//Action Creators and\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, updatedPost) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, updatedPost);\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CardMedia, CircularProgress } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"../../actions/posts\";\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-row-gap: 9.6rem;\r\n  grid-column-gap: 6.4rem;\r\n  grid-template-columns: repeat(2, 1fr);\r\n`;\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.posts);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, []);\r\n\r\n  return posts ? (\r\n    <div className=\"photos\">\r\n      {posts.map((post) => (\r\n        <Post post={post} key={post._id} setCurrentId={setCurrentId} />\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <CircularProgress />\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"./style\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.find((post) => post._id === currentId) : null\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: {\r\n      public_url: \"\",\r\n      public_id: \"\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setPostData(post);\r\n    }\r\n  }, [post]);\r\n\r\n  /*Handling the file Input */\r\n  const onChange = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setPostData({\r\n          ...postData,\r\n          selectedFile: { public_url: reader.result },\r\n        });\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n    } else {\r\n      dispatch(createPost(postData));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"form\">\r\n      <h2 class=\"secondary-heading\">Create a Memory</h2>\r\n      <form class=\"cta-form\" type=\"submit\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label for=\"creator\">Created By</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Who took the picture?\"\r\n            value={postData.creator}\r\n            id=\"creator\"\r\n            onChange={(e) => {\r\n              setPostData({ ...postData, creator: e.target.value });\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label for=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What is it about?\"\r\n            id=\"Title\"\r\n            onChange={(e) => {\r\n              setPostData({ ...postData, title: e.target.value });\r\n            }}\r\n            value={postData.title}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"title\">Message</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What's the message behind?\"\r\n            id=\"Title\"\r\n            maxLength=\"30\"\r\n            required\r\n            onChange={(e) => {\r\n              setPostData({ ...postData, message: e.target.value });\r\n            }}\r\n            value={postData.message}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"tags\">Tags</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Relevant Tags\"\r\n            id=\"creator\"\r\n            onChange={(e) => {\r\n              setPostData({ ...postData, tags: e.target.value.split(\",\") });\r\n            }}\r\n            value={postData.tags}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            name=\"image\"\r\n            onChange={onChange}\r\n            accept=\"image/png, image/gif, image/jpeg\"\r\n          />\r\n        </div>\r\n\r\n        <button class=\"btn-submit\">Submit</button>\r\n      </form>\r\n\r\n      {/* <img src={selectedFile} alt=\"|pre\" /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Header } from \"./components/Header/Header\";\r\nimport Posts from \"./components/Posts/Posts\";\r\nimport Form from \"./components/Form/Form\";\r\n\r\nconst App = () => {\r\n  const [currentId, setCurrentId] = useState(null);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"section-gallery\">\r\n        <div className=\"container\">\r\n          <Posts currentId={currentId} setCurrentId={setCurrentId}></Posts>\r\n          <Form currentId={currentId} setCurrentId={setCurrentId}></Form>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { postReducer } from \"./postsReducers\";\r\n\r\nexport default combineReducers({\r\n  posts: postReducer,\r\n});\r\n","import {\r\n  FETCH_ALL,\r\n  DELETE,\r\n  UPDATE,\r\n  LIKE,\r\n  CREATE,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport const postReducer = (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n\r\n    case DELETE:\r\n      console.log(action.payload);\r\n      return posts.filter((post) => post._id !== action.payload);\r\n\r\n    case UPDATE:\r\n    case LIKE:\r\n      return posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport combineReducers from \"./reducers/combineReducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n//Creating a store for\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  combineReducers,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}